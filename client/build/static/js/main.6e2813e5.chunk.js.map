{"version":3,"sources":["components/Jumbotron/Jumbotron.js","components/DeleteBtn/DeleteBtn.js","utils/API.js","components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/List/List.js","components/List/ListItem.js","components/Form/Input.js","components/Form/TextArea.js","components/Form/FormBtn.js","pages/Profiles/Profiles.js","components/Nav/Nav.js","App.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","paddingTop","textAlign","className","DeleteBtn","props","Object","assign","role","tabIndex","API","getProfiles","axios","get","getProfile","id","deleteProfile","delete","saveProfile","profileData","post","Col","size","split","map","join","Container","fluid","concat","Row","List","ListItem","Input","TextArea","rows","FormBtn","float","marginBottom","Profiles","state","profiles","name","description","picture","loadProfiles","then","res","_this","setState","data","catch","err","console","log","handleInputChange","event","_event$target","target","value","defineProperty","handleFormSubmit","preventDefault","this","_this2","Jumbotron_Jumbotron","onChange","placeholder","disabled","onClick","length","List_List","profile","key","_id","href","src","alt","components_DeleteBtn_DeleteBtn","Component","Nav","App","Nav_Nav","pages_Profiles_Profiles","ReactDOM","render","src_App","document","getElementById"],"mappings":"mQAaeA,MAXf,SAAAC,GAAiC,IAAZC,EAAYD,EAAZC,SACnB,OACEC,EAAAC,EAAAC,cAAA,OACEC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,WAAY,GAAIC,UAAW,UAChEC,UAAU,aAETT,UCMQU,MATf,SAAmBC,GACjB,OACEV,EAAAC,EAAAC,cAAA,OAAAS,OAAAC,OAAA,CAAMJ,UAAU,cAAiBE,EAAjC,CAAwCG,KAAK,SAASC,SAAS,MAA/D,2BCLWC,EAAA,CAEbC,YAAa,WACX,OAAOC,IAAMC,IAAI,kBAGnBC,WAAY,SAASC,GACnB,OAAOH,IAAMC,IAAI,iBAAmBE,IAGtCC,cAAe,SAASD,GACtB,OAAOH,IAAMK,OAAO,iBAAmBF,IAGzCG,YAAa,SAASC,GACpB,OAAOP,IAAMQ,KAAK,gBAAiBD,KCbhC,SAASE,EAAT5B,GAAiC,IAAlB6B,EAAkB7B,EAAlB6B,KAAM5B,EAAYD,EAAZC,SAC1B,OACEC,EAAAC,EAAAC,cAAA,OACEM,UAAWmB,EACRC,MAAM,KACNC,IAAI,SAAAF,GAAI,MAAI,OAASA,IACrBG,KAAK,MAEP/B,GCTA,SAASgC,EAATjC,GAAwC,IAAnBkC,EAAmBlC,EAAnBkC,MAAOjC,EAAYD,EAAZC,SACjC,OAAOC,EAAAC,EAAAC,cAAA,OAAKM,UAAS,YAAAyB,OAAcD,EAAQ,SAAW,KAAOjC,GCDxD,SAASmC,EAATpC,GAAkC,IAAnBkC,EAAmBlC,EAAnBkC,MAAOjC,EAAYD,EAAZC,SAC3B,OAAOC,EAAAC,EAAAC,cAAA,OAAKM,UAAS,MAAAyB,OAAQD,EAAQ,SAAW,KAAOjC,SCDlD,SAASoC,EAATrC,GAA4B,IAAZC,EAAYD,EAAZC,SACrB,OACEC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,2BACbR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,cAAcT,ICJ3B,SAASqC,EAATtC,GAAgC,IAAZC,EAAYD,EAAZC,SACzB,OAAOC,EAAAC,EAAAC,cAAA,MAAIM,UAAU,mBAAmBT,GCDnC,SAASsC,EAAM3B,GACpB,OACEV,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cACbR,EAAAC,EAAAC,cAAA,QAAAS,OAAAC,OAAA,CAAOJ,UAAU,gBAAmBE,KCHnC,SAAS4B,EAAS5B,GACvB,OACEV,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cACbR,EAAAC,EAAAC,cAAA,WAAAS,OAAAC,OAAA,CAAUJ,UAAU,eAAe+B,KAAK,KAAQ7B,KCH/C,SAAS8B,EAAQ9B,GACtB,OACEV,EAAAC,EAAAC,cAAA,SAAAS,OAAAC,OAAA,GAAYF,EAAZ,CAAmBP,MAAO,CAAEsC,MAAO,QAASC,aAAc,IAAMlC,UAAU,oBACvEE,EAAMX,cC4HE4C,6MAvHbC,MAAQ,CACNC,SAAU,GACVC,KAAM,GACNC,YAAa,GACbC,QAAS,MASXC,aAAe,WACblC,EAAIC,cACDkC,KAAK,SAAAC,GAAG,OACPC,EAAKC,SAAS,CAAER,SAAUM,EAAIG,KAAMR,KAAM,GAAIC,YAAa,GAAIC,QAAS,OAEzEO,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI9BnC,cAAgB,SAAAD,GACdL,EAAIM,cAAcD,GACf8B,KAAK,SAAAC,GAAG,OAAIC,EAAKH,iBACjBM,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI9BG,kBAAoB,SAAAC,GAAS,IAAAC,EACHD,EAAME,OAAtBhB,EADmBe,EACnBf,KAAMiB,EADaF,EACbE,MACdX,EAAKC,SAAL1C,OAAAqD,EAAA,EAAArD,CAAA,GACGmC,EAAOiB,OAMZE,iBAAmB,SAAAL,GACjBA,EAAMM,iBACFd,EAAKR,MAAME,MAAQM,EAAKR,MAAMG,aAChChC,EAAIQ,YAAY,CACduB,KAAMM,EAAKR,MAAME,KACjBC,YAAaK,EAAKR,MAAMG,YACxBC,QAASI,EAAKR,MAAMI,UAEnBE,KAAK,SAAAC,GAAG,OAAIC,EAAKH,iBACjBM,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,yFAtC9BW,KAAKlB,gDA0CE,IAAAmB,EAAAD,KACP,OACEnE,EAAAC,EAAAC,cAAC6B,EAAD,CAAWC,OAAK,GACdhC,EAAAC,EAAAC,cAACgC,EAAD,KACElC,EAAAC,EAAAC,cAACwB,EAAD,CAAKC,KAAK,QACR3B,EAAAC,EAAAC,cAACmE,EAAD,KACErE,EAAAC,EAAAC,cAAA,+BAEFF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACmC,EAAD,CACE0B,MAAOI,KAAKvB,MAAME,KAClBwB,SAAUH,KAAKR,kBACfb,KAAK,OACLyB,YAAY,oBAEdvE,EAAAC,EAAAC,cAACoC,EAAD,CACEyB,MAAOI,KAAKvB,MAAMG,YAClBuB,SAAUH,KAAKR,kBACfb,KAAK,cACLyB,YAAY,2BAEdvE,EAAAC,EAAAC,cAACmC,EAAD,CACE0B,MAAOI,KAAKvB,MAAMI,QAClBsB,SAAUH,KAAKR,kBACfb,KAAK,UACLyB,YAAY,mDAEdvE,EAAAC,EAAAC,cAACsC,EAAD,CACEgC,WAAYL,KAAKvB,MAAME,MAAQqB,KAAKvB,MAAMG,aAC1C0B,QAASN,KAAKF,kBAFhB,sBAQJjE,EAAAC,EAAAC,cAACwB,EAAD,CAAKC,KAAK,cACR3B,EAAAC,EAAAC,cAACmE,EAAD,KACErE,EAAAC,EAAAC,cAAA,+BAEDiE,KAAKvB,MAAMC,SAAS6B,OACnB1E,EAAAC,EAAAC,cAACyE,EAAD,KACGR,KAAKvB,MAAMC,SAAShB,IAAI,SAAA+C,GACvB,OACE5E,EAAAC,EAAAC,cAACkC,EAAD,CAAUyC,IAAKD,EAAQE,KACrB9E,EAAAC,EAAAC,cAAA,KAAG6E,KAAM,aAAeH,EAAQE,KAC9B9E,EAAAC,EAAAC,cAAA,cACG0E,EAAQ9B,KACT9C,EAAAC,EAAAC,cAAA,WACC0E,EAAQ7B,YACT/C,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,KAAGM,UAAU,eAAb,KAA6BR,EAAAC,EAAAC,cAAA,OAAK8E,IAAKJ,EAAQ5B,QAASiC,IAAI,kBAA5D,OAGAjF,EAAAC,EAAAC,cAACgF,EAAD,CAAWT,QAAS,kBAAML,EAAK/C,cAAcuD,EAAQE,YAM7D9E,EAAAC,EAAAC,cAAA,MAAIM,UAAU,4BAAd,mCAhHS2E,aCIRC,MAVf,WACE,OACEpF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,+CACbR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,eAAeuE,KAAK,KAAjC,iBCQSM,MATf,WACE,OACErF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoF,EAAD,MACAtF,EAAAC,EAAAC,cAACqF,EAAD,QCJNC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.6e2813e5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 100, clear: \"both\", paddingTop: 20, textAlign: \"center\" }}\r\n      className=\"jumbotron\"\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./DeleteBtn.css\";\r\n\r\n// The ...props means, spread all of the passed props onto this element\r\n// That way we don't have to define them all individually\r\nfunction DeleteBtn(props) {\r\n  return (\r\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\r\n      {/* âœ— */}\r\n      DELETE\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default DeleteBtn;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all profiles\r\n  getProfiles: function() {\r\n    return axios.get(\"/api/profiles\");\r\n  },\r\n  // Gets the Profile with the given id\r\n  getProfile: function(id) {\r\n    return axios.get(\"/api/profiles/\" + id);\r\n  },\r\n  // Deletes the Profile with the given id\r\n  deleteProfile: function(id) {\r\n    return axios.delete(\"/api/profiles/\" + id);\r\n  },\r\n  // Saves a Profile to the database\r\n  saveProfile: function(profileData) {\r\n    return axios.post(\"/api/profiles\", profileData);\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n","import React from \"react\";\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n","import React from \"react\";\r\nimport \"./List.css\";\r\n\r\nexport function List({ children }) {\r\n  return (\r\n    <div className=\"list-overflow-container\">\r\n      <ul className=\"list-group\">{children}</ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ListItem({ children }) {\r\n  return <li className=\"list-group-item\">{children}</li>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input className=\"form-control\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function TextArea(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea className=\"form-control\" rows=\"5\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function FormBtn(props) {\r\n  return (\r\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\nimport DeleteBtn from \"../../components/DeleteBtn\";\r\nimport API from \"../../utils/API\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { List, ListItem } from \"../../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\r\n\r\nclass Profiles extends Component {\r\n  // Setting our component's initial state\r\n  state = {\r\n    profiles: [],\r\n    name: \"\",\r\n    description: \"\",\r\n    picture: \"\"\r\n  };\r\n\r\n  // When the component mounts, load all Profiles and save them to this.state.Profiles\r\n  componentDidMount() {\r\n    this.loadProfiles();\r\n  }\r\n\r\n  // Loads all Profiles  and sets them to this.state.profiles\r\n  loadProfiles = () => {\r\n    API.getProfiles()\r\n      .then(res =>\r\n        this.setState({ profiles: res.data, name: \"\", description: \"\", picture: \"\" })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Deletes a Profile from the database with a given id, then reloads Profiles from the db\r\n  deleteProfile = id => {\r\n    API.deleteProfile(id)\r\n      .then(res => this.loadProfiles())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Handles updating component state when the user types into the input field\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  // When the form is submitted, use the API.saveProfile method to save the Profile data\r\n  // Then reload Profiles from the database\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.name && this.state.description) {\r\n      API.saveProfile({\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        picture: this.state.picture\r\n      })\r\n        .then(res => this.loadProfiles())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n            <Jumbotron>\r\n              <h1>Create a Profile</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input\r\n                value={this.state.name}\r\n                onChange={this.handleInputChange}\r\n                name=\"name\"\r\n                placeholder=\"Name (required)\"\r\n              />\r\n              <TextArea\r\n                value={this.state.description}\r\n                onChange={this.handleInputChange}\r\n                name=\"description\"\r\n                placeholder=\"Description (required)\"\r\n              />\r\n              <Input\r\n                value={this.state.picture}\r\n                onChange={this.handleInputChange}\r\n                name=\"picture\"\r\n                placeholder=\"Please insert a URL of your picture (Optional)\"\r\n              />\r\n              <FormBtn\r\n                disabled={!(this.state.name && this.state.description)}\r\n                onClick={this.handleFormSubmit}\r\n              >\r\n                Submit a Profile\r\n              </FormBtn>\r\n            </form>\r\n          </Col>\r\n          <Col size=\"md-6 sm-12\">\r\n            <Jumbotron>\r\n              <h1>Profiles created</h1>\r\n            </Jumbotron>\r\n            {this.state.profiles.length ? (\r\n              <List>\r\n                {this.state.profiles.map(profile => {\r\n                  return (\r\n                    <ListItem key={profile._id}>\r\n                      <a href={\"/profiles/\" + profile._id}>\r\n                        <strong>\r\n                          {profile.name} \r\n                          <hr></hr>\r\n                          {profile.description}\r\n                          <hr></hr>\r\n                      <p className=\"text-center\">  <img src={profile.picture} alt=\"Profile Image\"></img> </p> \r\n                        </strong>\r\n                      </a>\r\n                      <DeleteBtn onClick={() => this.deleteProfile(profile._id)} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            ) : (\r\n              <h4 className=\"text-center text-success\">No Results to Display</h4>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profiles;\r\n","import React from \"react\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-info\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        My Profiles\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport Profiles from \"./pages/Profiles\";\r\nimport Nav from \"./components/Nav\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <Profiles />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}